name: Too Big To Run HTTP Status Code (Stage 1) Check and Lexical Analysis
on:
  schedule:
    - cron: "30 22 * * *"
  workflow_dispatch:
jobs:
  run-http-checks:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        input_file:
          - cleaned_data/PhiUSIIL_cleaned_v2.csv
          - cleaned_data/Mendeley_cleaned_v2.csv
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.MTECH }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create HTTP Status Output Directory
        run: mkdir -p http_status

      - name: Run HTTP Status Checker for ${{ matrix.input_file }}
        id: run_checker
        run: |
          ABS_INPUT_FILE="$(realpath "${{ matrix.input_file }}")"
          INPUT_BASENAME=$(basename "$ABS_INPUT_FILE" .csv)

          echo "Running HTTP status check for $ABS_INPUT_FILE"
          python two_http_status_checker.py --input-file "$ABS_INPUT_FILE" --output-dir http_status

          # Find the actual output file
          OUTPUT_FILE=$(find http_status -name "*${INPUT_BASENAME}*.csv" -type f | head -1)

          if [ -z "$OUTPUT_FILE" ]; then
            echo "Error: No output file found for ${INPUT_BASENAME}"
            exit 1
          fi

          echo "Found output file: $OUTPUT_FILE"
          echo "output_file=${OUTPUT_FILE}" >> "$GITHUB_OUTPUT"
          echo "input_basename=${INPUT_BASENAME}" >> "$GITHUB_OUTPUT"

      - name: Verify HTTP Status Output
        run: |
          OUTPUT_FILE="${{ steps.run_checker.outputs.output_file }}"
          echo "Verifying output: $OUTPUT_FILE"

          # Print header for debugging
          echo "File header: $(head -1 "$OUTPUT_FILE")"

          # Check for essential columns
          REQUIRED_COLUMNS=("url" "http_status")
          for col in "${REQUIRED_COLUMNS[@]}"; do
            if ! head -1 "$OUTPUT_FILE" | grep -q "$col"; then
              echo "::error::Column '$col' missing in HTTP status output"
              exit 1
            fi
          done

      - name: Upload HTTP Status Features
        uses: actions/upload-artifact@v4
        with:
          name: http_status_features_${{ steps.run_checker.outputs.input_basename }}
          path: ${{ steps.run_checker.outputs.output_file }}
          if-no-files-found: error

      - name: Commit and Push HTTP Feature Files
        env:
          GITHUB_TOKEN: ${{ secrets.MTECH }}
        run: |
          git config user.name "Ifeoluwa Oseni"
          git config user.email "ifeoseni@gmail.com"
          git pull origin main --rebase
          git add http_status/

          if git diff --cached --quiet; then
            echo "No changes to commit for HTTP status features"
          else
            git commit -m "Auto-update: HTTP status features [skip ci]"
            git push origin HEAD:main
          fi

  run-lexical-analysis:
    runs-on: ubuntu-latest
    needs: run-http-checks
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.MTECH }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Pull latest changes
        run: git pull origin main --rebase

      - name: Run Lexical Feature Extraction
        run: |
          mkdir -p lexical_features

          # Process all HTTP status CSV files
          find http_status -name '*.csv' -type f | while read input_csv; do
            if [ -f "$input_csv" ]; then
              echo "Processing $input_csv with lexical_feature_extractor.py"
              python lexical_feature_extractor.py --input-file "$input_csv" --output-dir lexical_features
            else
              echo "Warning: Problem processing file $input_csv"
            fi
          done

      - name: Verify Lexical Features Output
        run: |
          for file in lexical_features/*.csv; do
            if [ -f "$file" ]; then
              echo "Verifying $file"
              # Print first row
              echo "First row: $(head -1 "$file")"
              
              # Check for essential columns
              if ! head -1 "$file" | grep -q 'url'; then
                echo "::error::URL column missing in $file"
                exit 1
              fi
            fi
          done

      - name: Commit and Push Lexical Feature Files
        env:
          GITHUB_TOKEN: ${{ secrets.MTECH }}
        run: |
          git config user.name "Ifeoluwa Oseni"
          git config user.email "ifeoseni@gmail.com"

          # Add and commit changes first
          if [ -d "lexical_features/" ] && [ "$(ls -A lexical_features/)" ]; then
            git add lexical_features/

            if ! git diff --cached --quiet; then
              git commit -m "Auto-update: Lexical features [skip ci]"
            else
              echo "No changes to commit for lexical features"
            fi
          else
            echo "No lexical feature files to commit"
          fi

          # Now safe to pull and push
          git pull --rebase origin main
          git push origin HEAD:main
